---
import Moon from "@/icons/moon.astro";
import Sun from "@/icons/sun.astro";
---

<button
	id="theme-toggle"
	aria-label="Toggle theme"
	class="hover:bg-muted/15 cursor-pointer rounded-md p-2"
>
	<Moon
		class="absolute size-4 scale-0 rotate-90 transition-all dark:scale-100 dark:rotate-0"
	/>
	<Sun
		class="size-4 scale-100 rotate-0 transition-all dark:scale-0 dark:-rotate-90"
	/>
</button>

<script is:inline data-astro-rerun>
	(function () {
		// Initialize theme on page load.
		const theme = (() => {
			const localStorageTheme = localStorage.getItem("theme") ?? "";

			// Check if user already has a theme preference.
			if (["light", "dark"].includes(localStorageTheme)) {
				return localStorageTheme;
			}

			// If no preference, check the system preference.
			if (
				window.matchMedia("(prefers-color-scheme: dark)").matches
			) {
				return "dark";
			}

			return "light";
		})();

		document.body.classList.toggle("dark", theme === "dark");
		localStorage.setItem("theme", theme);
	})();
</script>

<script>
	let audio: HTMLAudioElement | null = new Audio(
		"/sound/theme-switcher.mp3",
	);

	const handleToggleClick = () => {
		const isDark =
			document.body.classList.contains("dark") ||
			localStorage.getItem("theme") === "dark";
		document.body.classList.toggle("dark");
		localStorage.setItem("theme", isDark ? "light" : "dark");
		audio?.play();
	};

	const attachEventListener = () =>
		document
			.getElementById("theme-toggle")
			?.addEventListener("click", handleToggleClick);

	attachEventListener();

	// For Astro View Transitions support
	document.addEventListener("astro:after-swap", attachEventListener);

	// Cleanup event listener on unload.
	window.addEventListener("beforeunload", () => {
		document
			.getElementById("theme-toggle")
			?.removeEventListener("click", handleToggleClick);

		if (audio) {
			audio.pause();
			audio = null;
		}
	});
</script>
